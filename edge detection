Code for Edge Detection using Ordinary operator:
clc;
a=imread('f:\dip\lavender.jpg');
//convert to gray image
a=rgb2gray(a); a=double(a);
//get row, col in c(1) and c(2)
[row col]=size(a); //Ordinary operators
w1=[1 0; -1 0]; w2=[1 -1; 0 0];
for x=2:1:row-1
for y=2:1:col-1
a1(x,y)=w1(1)*a(x,y) + w1(2)*a(x,y+1) + w1(3)*a(x+1,y) +
w1(4)*a(x+1,y+1);
a2(x,y)=w2(1)*a(x,y) + w2(2)*a(x,y+1) + w2(3)*a(x+1,y) +
w2(4)*a(x+1,y+1);
end
end a3=a1+a2;
subplot(2,2,1);imshow(uint8(a1))title('X-gradient image')
subplot(2,2,2);imshow(uint8(a2))title('Y-gradient image')
subplot(2,2,3);imshow(uint8(a3))title('Resultant gradient image')

Code for Edge Detection using Roberts operator:
clc;//read image
a=imread('f:\dip\cameraman.jpg');
//convert to gray image
a=rgb2gray(a) ;a=double(a);
//get row, col in c(1) and c(2) [row col]=size(a);
//Roberts operators w1=[1 0; 0 -1]; w2=[0 1; -1 0];
for x=2:1:row-1
for y=2:1:col-1
a1(x,y)=w1(1)*a(x,y) + w1(2)*a(x,y+1) + w1(3)*a(x+1,y) +
w1(4)*a(x+1,y+1);
a2(x,y)=w2(1)*a(x,y) + w2(2)*a(x,y+1) + w2(3)*a(x+1,y) +
w2(4)*a(x+1,y+1);
endend
a3=a1+a2;
subplot(2,2,1);imshow(uint8(a))title('Original image')
subplot(2,2,2);imshow(uint8(a1))title('X-gradient image')
subplot(2,2,3);imshow(uint8(a2))title('Y-gradient image')
subplot(2,2,4);,imshow(uint8(a3))title('Resultant gradient image')


Code for Edge Detection using Prewitts operator:
clc;
//read image a=imread('f:\dip\cute2.jpg');
//convert to gray image a=rgb2gray(a); a=double(a);
//get row, col in c(1) and c(2) [row col]=size(a);
//Prewitts operators
w1=[-1 -1 -1; 0 0 0; 1 1 1]; w2=[-1 0 1; -1 0 1; -1 0 1];
for x=2:1:row-1
for y=2:1:col-1
a1(x,y)=w1(1)*a(x-1,y-1) + w1(2)*a(x-1,y) + w1(3)*a(x-1,y+1) +w1(4)*a(x,y-1)+w1(5)*a(x,y) + w1(6)*a(x,y+1) +w1(7)*a(x+1,y-1) +
w1(8)*a(x+1,y) + w1(9)*a(x+1,y+1);
a2(x,y)=w2(1)*a(x-1,y-1) + w2(2)*a(x-1,y) + w2(3)*a(x-1,y+1) +w2(4)*a(x,y-1)+w2(5)*a(x,y) + w2(6)*a(x,y+1) +w2(7)*a(x+1,y-1) +
w2(8)*a(x+1,y) + w2(9)*a(x+1,y+1);
end
end a3=a1+a2;
subplot(2,2,1);imshow(uint8(a))title('Original image')
subplot(2,2,2);imshow(uint8(a1))title('X-gradient image')
subplot(2,2,3);imshow(uint8(a2))title('Y-gradient image')
subplot(2,2,4);imshow(uint8(a3))title('Resultant gradient image')


Code for Edge Detection using Sobel operator:
clc;
//read image a=imread('f:\dip\lavender.jpg');
//convert to gray image a=rgb2gray(a); a=double(a);
//get row, col in c(1) and c(2) [row col]=size(a);
//Sobel operators
w1=[-1 -2 -1; 0 0 0; 1 2 1]; w2=[-1 0 1; -2 0 2; -1 0 1];
for x=2:1:row-1
for y=2:1:col-1
a1(x,y)=w1(1)*a(x-1,y-1) + w1(2)*a(x-1,y) + w1(3)*a(x-1,y+1) +w1(4)*a(x,y-1)+w1(5)*a(x,y) + w1(6)*a(x,y+1) +w1(7)*a(x+1,y-1) +
w1(8)*a(x+1,y) + w1(9)*a(x+1,y+1);
a2(x,y)=w2(1)*a(x-1,y-1) + w2(2)*a(x-1,y) + w2(3)*a(x-1,y+1) +w2(4)*a(x,y-1)+w2(5)*a(x,y) + w2(6)*a(x,y+1) +w2(7)*a(x+1,y-1) +
w2(8)*a(x+1,y) + w2(9)*a(x+1,y+1);
end
end a3=a1+a2;
subplot(2,2,1);imshow(uint8(a))title('Original image')
subplot(2,2,2);imshow(uint8(a1))title('X-gradient image')
subplot(2,2,3);imshow(uint8(a2))title('Y-gradient image')
subplot(2,2,4);imshow(uint8(a3))title('Resultant gradient image')



Code for Edge Detection using Different Edge detectors:
close ;
clc ;
a = imread ('d:\dip\supra.jpg');
a = rgb2gray(a);
c = edge (a, 'sobel');
d = edge (a, 'prewitt');
e = edge (a, 'log');
f = edge (a, 'canny');
subplot(2, 3, 1); imshow(a) title ('Original Image')
subplot(2, 3, 2); imshow(c) title ('Sobel')
subplot(2, 3, 3); imshow(d) title('Prewitt')
subplot(2, 3, 4); imshow(e) title ('Log')
subplot(2, 3, 5); imshow(f) title ('Canny')
